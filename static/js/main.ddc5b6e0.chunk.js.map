{"version":3,"sources":["components/CreateContact/CreateContact.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/FilterContactsByQuery/FilterContactsByQuery.jsx","components/App.jsx","index.js"],"names":["CreateContact","name","nameID","numberID","number","onChange","onSubmit","htmlFor","value","type","required","Filter","filter","filterID","id","Contactlist","onDelete","filtedContacts","map","contact","key","onClick","filterContactsByQuery","contacts","toLowerCase","includes","App","state","inputIDs","shortid","generate","handleChange","e","target","setState","handleSubmit","preventDefault","createContact","find","alert","resetForm","handleDelete","this","FilterContactsByQuery","ContactList","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ddc5b6e0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CreateContact = ({\n  name,\n  nameID,\n  numberID,\n  number,\n  onChange,\n  onSubmit,\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <label htmlFor={nameID}>\n        <h3>Name</h3>\n        <input\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n          type=\"text\"\n          required\n        />\n      </label>\n\n      <label htmlFor={numberID}>\n        <h3>Phone</h3>\n        <input\n          name=\"number\"\n          value={number}\n          onChange={onChange}\n          type=\"number\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nCreateContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  nameID: PropTypes.string.isRequired,\n  numberID: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default CreateContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange, filterID }) => (\n  <div>\n    <label htmlFor={filterID}>\n      <h2>Find contacts by name</h2>\n      <input\n        name=\"filter\"\n        value={filter}\n        id={filterID}\n        onChange={onChange}\n        type=\"text\"\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filterID: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Contactlist = ({ onDelete, filtedContacts }) => (\n  <ul>\n    {filtedContacts.map(contact => (\n      <li key={contact.id}>\n        {contact.name}: {contact.number}\n        <button type=\"button\" onClick={() => onDelete(contact.id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactlist.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  filtedContacts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default Contactlist;\n","const filterContactsByQuery = (contacts, filter) => {\n  return contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter),\n  );\n};\n\nexport default filterContactsByQuery;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport CreateContact from './CreateContact/CreateContact';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport FilterContactsByQuery from './FilterContactsByQuery/FilterContactsByQuery';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  inputIDs = {\n    nameID: shortid.generate(),\n    numberID: shortid.generate(),\n    filterID: shortid.generate(),\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number, contacts } = this.state;\n    e.preventDefault();\n    const createContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (contacts.find(contact => contact.name === name)) {\n      alert('This name already exists');\n    } else {\n      this.setState(state => ({\n        contacts: [...state.contacts, createContact],\n      }));\n    }\n    this.resetForm();\n  };\n\n  handleDelete = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, contacts, number, filter } = this.state;\n    const { nameID, numberID, filterID } = this.inputIDs;\n    const onChange = this.handleChange;\n    const onSubmit = this.handleSubmit;\n    const onDelete = this.handleDelete;\n\n    const filtedContacts = FilterContactsByQuery(contacts, filter);\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <CreateContact\n          name={name}\n          nameID={nameID}\n          number={number}\n          numberID={numberID}\n          onChange={onChange}\n          onSubmit={onSubmit}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          onChange={this.handleChange}\n          filterID={filterID}\n        />\n        <ContactList onDelete={onDelete} filtedContacts={filtedContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './main.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}